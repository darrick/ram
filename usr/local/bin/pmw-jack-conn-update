#!/bin/zsh

# This script updates a "JACK connections" table in the Rivendell
# database (connection_state) with Rivendell Macro carts that
# represent the currently connected JACK audio ports. It is intended
# that the Macro carts listed in the connection_state table will be
# re-connected when Rivendell is restarted on the associated computer.
#
# This script will normally be run as the Rivendell system user (see
# AudioOwner in /etc/rd.conf) for any given Rivendell "workstation".

# Arguments:
# ${1} must be a Rivendell CART number representing a Macro cart that runs either the JC or the JD macro
# ${2} must be flag indicating JACK port "connect" or "disconnect"

zmodload zsh/datetime

# Get zsh functions necessary for this script
[[ -r ${ROOT:-/}usr/local/bin/zsh-functions ]] && source ${ROOT:-/}usr/local/bin/zsh-functions

HOSTNAME=$(whence hostname) ; HOSTNAME=${HOSTNAME:-${ROOT:-/}bin/hostname}
LOGGER=$(whence logger) ; LOGGER=${LOGGER:-${ROOT:-/}usr/bin/logger}

# Assume success.
exitValue=0

# Log STDOUT and STDERR of this script and all commands called by this
# script to separate files. Note that these files will not contain
# time-stamped messages, this script uses logger(1) to log messages to
# /var/log/syslog with timestamps.
exec 1> /var/tmp/${0##*/}.out
exec 2> /var/tmp/${0##*/}.err

macroCart=${1:?"${0##*/}: ERROR: no macro cart was specified on the command line."}
cartState=${2:?"${0##*/}: ERROR: no state indicator was specified on the command line."}

connectionStateTable=${CONNECTION_STATE_TABLE:-"connection_state"}

# Note: the hostame MUST match the workstation name that is configured
# in the Rivendell database.
myHostName=${HOST:-$(${HOSTNAME} -s)}
if [[ -n "${myHostName}" ]] ; then

    if [[ ${cartState} =~ '^CONNECT' ]] ; then

	sqlStatement="REPLACE INTO connection_state ( number, host ) VALUES ( ${macroCart},'${myHostName}' )"

    elif [[ ${cartState} =~ '^DISCONNECT' ]] ; then

	sqlStatement="DELETE FROM ${connectionStateTable} WHERE number = ${macroCart} AND host = '${myHostName}'"

    else
	${LOGGER} --stderr -t ${0##*/} -p local7.err -i "ERROR: Unknown state indicator '${cartState}'." >&2
	exitValue=5
    fi

    if doSQL "${sqlStatement}" ; then

	# This is the only "SUCCESS" path in the flow of the script.
	${LOGGER} -t ${0##*/} -p local7.info -i "INFO: mysql(1) statement '${sqlStatement}': SUCCESS."

    else

	${LOGGER} --stderr -t ${0##*/} -p local7.err -i "ERROR: execution of mysql(1) statement '${sqlStatement}' failed (${?})."
	exitValue=4

    fi

else

    ${LOGGER} --stderr -t ${0##*/} -p local7.err -i "ERROR: cannot determine my hostname with the hostname(1) command."
    exitValue=3

fi

exit ${exitValue}

mysql <<EOF
CREATE TABLE `connection_state` (
  `number` int(10) unsigned NOT NULL,
  `host` char(64) NOT NULL,
  PRIMARY KEY (`number`,`host`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
EOF
